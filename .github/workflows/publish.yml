name: Publish StreamViX Docker image

on:
  workflow_dispatch:
  repository_dispatch:
    types: [release]
  schedule:
    - cron: "0 0 * * *"

jobs:
  check-and-build:
    name: Check for new releases and build Docker image
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release from external repository
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/qwertyuiop8899/streamvix/releases/latest | jq -r .tag_name)
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          echo "Latest qwertyuiop8899/streamvix release: $LATEST_RELEASE"

      - name: Check last processed release
        id: check_release
        run: |
          CURRENT_VERSION=$(cat .version 2>/dev/null || echo "none")
          if [ "${CURRENT_VERSION}" == "${{ steps.get_release.outputs.LATEST_RELEASE }}" ]; then
            echo "No new version detected. Skipping build."
            echo "BUILD_NEEDED=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected. Build needed."
            echo "BUILD_NEEDED=true" >> $GITHUB_OUTPUT
          fi

      - name: Prepare the repo
        if: ${{ steps.check_release.outputs.BUILD_NEEDED == 'true' }}
        run: |
          chmod +x ./.docker/prepare.sh
          ./.docker/prepare.sh ${{ steps.get_release.outputs.LATEST_RELEASE }}
        shell: bash

    #   - name: Set up Docker Buildx
    #     if: ${{ steps.check_release.outputs.BUILD_NEEDED == 'true' }}
    #     uses: docker/setup-buildx-action@v3

    #   - name: Log in to DockerHub
    #     if: ${{ steps.check_release.outputs.BUILD_NEEDED == 'true' }}
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    #   - name: Docker Metadata
    #     if: ${{ steps.check_release.outputs.BUILD_NEEDED == 'true' }}
    #     id: docker_metadata
    #     uses: docker/metadata-action@v5
    #     with:
    #       images: kRYstall9/streamvix
    #       tags: |
    #         type=raw,value=${{ steps.get_release.outputs.LATEST_RELEASE }}
    #         type=raw,value=latest

    #   - name: Build and push Docker image
    #     if: ${{ steps.check_release.outputs.BUILD_NEEDED == 'true' }}
    #     uses: docker/build-push-action@v6
    #     with:
    #       context: .
    #       push: true
    #       tags: ${{ steps.docker_metadata.outputs.tags }}
    #       labels: ${{ steps.docker_metadata.outputs.labels }}

      - name: Update version file
        if: ${{ steps.check_release.outputs.BUILD_NEEDED == 'true' }}
        run: |
          echo "${{ steps.get_release.outputs.LATEST_RELEASE }}" > .version
        #   git config --global user.name "github-actions[bot]"
        #   git config --global user.email "github-actions[bot]@users.noreply.github.com"
        #   git add .version
        #   git commit -m "Update to streamvix version ${{ steps.get_release.outputs.LATEST_RELEASE }}"
        #   git push
